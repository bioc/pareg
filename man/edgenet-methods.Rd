% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/netreg.R
\docType{methods}
\name{edgenet}
\alias{edgenet}
\alias{edgenet,matrix,numeric-method}
\alias{edgenet,matrix,matrix-method}
\title{Fit a graph-regularized linear regression model using
 edge-based regularization. Adapted from https://github.com/dirmeier/netReg.}
\usage{
edgenet(
  X,
  Y,
  G.X = NULL,
  G.Y = NULL,
  lambda = 0,
  psigx = 0,
  psigy = 0,
  thresh = 1e-05,
  maxit = 1e+05,
  learning.rate = 0.01,
  family = gaussian
)

\S4method{edgenet}{matrix,numeric}(
  X,
  Y,
  G.X = NULL,
  G.Y = NULL,
  lambda = 0,
  psigx = 0,
  psigy = 0,
  thresh = 1e-05,
  maxit = 1e+05,
  learning.rate = 0.01,
  family = gaussian
)

\S4method{edgenet}{matrix,matrix}(
  X,
  Y,
  G.X = NULL,
  G.Y = NULL,
  lambda = 0,
  psigx = 0,
  psigy = 0,
  thresh = 1e-05,
  maxit = 1e+05,
  learning.rate = 0.01,
  family = gaussian
)
}
\arguments{
\item{X}{input matrix, of dimension (\code{n} x \code{p})
where \code{n} is the number of observations and \code{p} is the number
of covariables. Each row is an observation vector.}

\item{Y}{output matrix, of dimension (\code{n} x \code{q})
where \code{n} is the number of observations and \code{q} is the number
of response variables. Each row is an observation vector.}

\item{G.X}{non-negativ affinity matrix for \code{X}, of dimensions
(\code{p} x \code{p}) where \code{p} is the number of covariables}

\item{G.Y}{non-negativ affinity matrix for \code{Y}, of dimensions
(\code{q} x \code{q}) where \code{q} is the number of responses}

\item{lambda}{\code{numerical} shrinkage parameter for LASSO.}

\item{psigx}{\code{numerical} shrinkage parameter for graph-regularization
of \code{G.X}}

\item{psigy}{\code{numerical} shrinkage parameter for graph-regularization
of \code{G.Y}}

\item{thresh}{\code{numerical} threshold for optimizer}

\item{maxit}{maximum number of iterations for optimizer
(\code{integer})}

\item{learning.rate}{step size for Adam optimizer (\code{numerical})}

\item{family}{family of response, e.g. \emph{gaussian} or \emph{binomial}}
}
\value{
An object of class \code{edgenet}
\item{beta }{ the estimated (\code{p} x \code{q})-dimensional
 coefficient matrix B.hat}
\item{alpha }{ the estimated (\code{q} x \code{1})-dimensional
 vector of intercepts}
\item{parameters }{ regularization parameters}
\item{lambda }{ regularization parameter lambda)}
\item{psigx }{ regularization parameter psigx}
\item{psigy }{ regularization parameter psigy}
\item{family }{ a description of the error distribution and link function
   to be used. Can be a \code{\link[pareg:family]{pareg::family}}
   function or a character string
   naming a family function, e.g. \code{gaussian} or "gaussian".}
\item{call }{ the call that produced the object}
}
\description{
Fit a graph-regularized linear regression model using
 edge-penalization. The coefficients are computed using graph-prior
 knowledge in the form of one/two affinity matrices. Graph-regularization is
 an extension to previously introduced regularization techniques,
 such as the LASSO. See the vignette for details on the objective function of
 the model:
 \href{../doc/edgenet.html}{\code{vignette("edgenet", package="netReg")}}
}
\examples{
X <- matrix(rnorm(100 * 10), 100, 10)
b <- matrix(rnorm(100), 10)
G.X <- abs(rWishart(1, 10, diag(10))[, , 1])
G.Y <- abs(rWishart(1, 10, diag(10))[, , 1])
diag(G.X) <- diag(G.Y) <- 0

# estimate the parameters of a Gaussian model
Y <- X \%*\% b + matrix(rnorm(100 * 10), 100)
## dont use affinity matrices
fit <- edgenet(X = X, Y = Y, family = gaussian, maxit = 10)
## only provide one matrix
fit <- edgenet(
  X = X,
  Y = Y,
  G.X = G.X,
  psigx = 1,
  family = gaussian,
  maxit = 10
)
## use two matrices
fit <- edgenet(X = X, Y = Y, G.X = G.X, G.Y, family = gaussian, maxit = 10)
## if Y is vectorial, we cannot use an affinity matrix for Y
fit <- edgenet(X = X, Y = Y[, 1], G.X = G.X, family = gaussian, maxit = 10)
}
\references{
Cheng, Wei and Zhang, Xiang and Guo, Zhishan and Shi, Yu and Wang, Wei
 (2014),
 Graph-regularized dual Lasso for robust eQTL mapping. \cr
 \emph{Bioinformatics}
}
